Generate examples,,Base Question,Instruction,Context,Input Data,Output indicator,Final Query
,Prompting pattern,,,,,,
1,Base line without context,How can recursion be used to caculate powers? ,Write a piece of code that uses recursion to calculate powers. ,,Write the code in python and use recursion. ,"Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to calculate powers. Write the code in python and use recursion. Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. "
2,Base line context,,Write a piece of code that uses recursion to calculate powers. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
",Write the code in python and use recursion. ,"Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to calculate powers. Make sure the code only requires knowledge of basic concepts up to recursion. 
Write the code in python and use recursion. Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. "
3,Chain-of-thought / few shot learning,,Write a piece of code that uses recursion to calculate powers. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
",Write the code in python and use recursion. ,"Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to calculate powers. Make sure the code only requires knowledge of basic concepts up to recursion. 
Write the code in python and use recursion. Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. "
4,Context manager pattern,,Write a piece of code that uses recursion to calculate powers. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
",Write the code in python and use recursion. ,"Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to calculate powers. Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
Write the code in python and use recursion. Return a self contained function that given an input of a base and a power calculates the result. Make sure the code is correct, nicely formatted and commented. "
5,Base line without context,How can recursion be used to loop over a list?,Write a piece of code that uses recursion to loop over a list. ,,Write the code in python and use recursion. ,"Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to loop over a list. Write the code in python and use recursion. Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. "
6,Base line context,,Write a piece of code that uses recursion to loop over a list. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
",Write the code in python and use recursion. ,"Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to loop over a list. Make sure the code only requires knowledge of basic concepts up to recursion. 
Write the code in python and use recursion. Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. "
7,Chain-of-thought / few shot learning,,Write a piece of code that uses recursion to loop over a list. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
",Write the code in python and use recursion. ,"Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to loop over a list. Make sure the code only requires knowledge of basic concepts up to recursion. 
Write the code in python and use recursion. Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. "
8,Context manager pattern,,Write a piece of code that uses recursion to loop over a list. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
",Write the code in python and use recursion. ,"Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. ","Write a piece of code that uses recursion to loop over a list. Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
Write the code in python and use recursion. Return a self contained function that given an input list loops over a list. Make sure the code is correct, nicely formatted and commented. "
Explain Example code,,Base Question,Instruction,Context,Input Data,Output Indicator,Final Query
,Prompting pattern,,,,,,
9,Base line without context,Please explain the follwing example code. (Recusive x^n),Please explain the following code. ,,"This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
  ",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
  Please explain the code step by step and focus on the recursion part."
10,Base line context,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
","This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
  ",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
  Please explain the code step by step and focus on the recursion part."
11,Chain-of-thought / few shot learning,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
","This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```

  ",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```

  Please explain the code step by step and focus on the recursion part."
12,Context manager pattern,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
","This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
 ",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
This is the code in python.
```# recursive function to compute x**n
def pow(x,n):
    if n > 0:
        return x * pow(x,n-1)
    else:
        return 1
        
# main program calling the function
x = int(input(""Please enter x: ""))
n = int(input(""Please enter n: ""))
x_to_the_power_of_n = pow(x,n)
print(f""{x} ** {n} = {x_to_the_power_of_n}"")```
 Please explain the code step by step and focus on the recursion part."
13,Base line without context,Please explain the follwing example code. (Recursive fibonaci),Please explain the following code. ,,"This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
Please explain the code step by step and focus on the recursion part."
14,Base line context,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
","This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
Please explain the code step by step and focus on the recursion part."
15,Chain-of-thought / few shot learning,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
","This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
Please explain the code step by step and focus on the recursion part."
16,Context manager pattern,,Please explain the following code. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
","This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
",Please explain the code step by step and focus on the recursion part.,"Please explain the following code. Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
This code is in python.
```def fib(n):  
if n == 0:  
return 0  
elif n == 1:  
return 1  
else:  
return fib(n-1) + fib(n-2)  
  
n = int(input(""Please enter an integer number: ""))  
print(f""fib({n}) = {fib(n)}"")```
Please explain the code step by step and focus on the recursion part."
Generate Novel Exercises,,Base Question,Instruction,Context,Input Data,Output Indicator,Final Query
,Prompting pattern,,,,,,
17,Base line without context,Please generate a new exercise where I can practice recursion.,Please generate a new exercise where I can practice recursion. ,Make sure the code spans 1 or 2 functions at the most. ,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate a new exercise where I can practice recursion. Make sure the code spans 1 or 2 functions at the most. Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
18,Base line context,,Please generate a new exercise where I can practice recursion. ,Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate a new exercise where I can practice recursion. Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
19,Chain-of-thought / few shot learning,,Please generate a new exercise where I can practice recursion. ,Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate a new exercise where I can practice recursion. Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
20,Context manager pattern,,Please generate a new exercise where I can practice recursion. ,"Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
And make sure the code spans 1 or 2 functions at the most.
",Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate a new exercise where I can practice recursion. Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
And make sure the code spans 1 or 2 functions at the most.
Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
21,Base line without context,Generate another one.,"Please generate another exersice with the same specification. 
",Make sure the code spans 1 or 2 functions at the most.,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate another exersice with the same specification. 
Make sure the code spans 1 or 2 functions at the most.Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
22,Base line context,,"Please generate another exersice with the same specification. 
",Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate another exersice with the same specification. 
Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
23,Chain-of-thought / few shot learning,,"Please generate another exersice with the same specification. 
",Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.,Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate another exersice with the same specification. 
Make sure the code only requires knowledge of basic concepts up to recursion. And spans 1 or 2 functions at the most.Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"
24,Context manager pattern,,"Please generate another exersice with the same specification. 
","Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
And make sure the code spans 1 or 2 functions at the most.
",Make sure the exercise is appropriate for python. ,"Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
","Please generate another exersice with the same specification. 
Make sure the code only requires knowledge of basic concepts up to recursion. 
These basic concepts are:  
- Programming basics
- Variables
- Input
- Arithmetic Expressions
- Boolean Expressions
- If-Else
- Nested If
- Elif
- For Loop
- While Loop
- Range function
- Nested Loop
- Functions
- Values and References
- String formatting
- String operations
- Python Lists 1,2
- Python Dictionaries
- Recursion
Exclude any advanced concepts like: 
- File handling
- Exception handling
- Regular expressions
And make sure the code spans 1 or 2 functions at the most.
Make sure the exercise is appropriate for python. Return both the exercise and the solution, where the solution is hidden by spoiler tags. Make sure that the exercise is nicely formatted. Make sure the solution is nicely formatted, correct, commented and explained.
"